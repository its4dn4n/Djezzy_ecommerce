## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: 'APIs to manage the user resource.'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: 'User Management'
      groupDescription: 'APIs to manage the user resource.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Display User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"name":"Mafalda Lockman","email":"sydnie.morar@example.org"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/update
    metadata:
      groupName: 'User Management'
      groupDescription: 'APIs to manage the user resource.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: lulu19@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: 'G3!E]Hn1emyw'
        type: string
        custom: []
    cleanBodyParameters:
      email: lulu19@example.com
      password: 'G3!E]Hn1emyw'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/user
    metadata:
      groupName: 'User Management'
      groupDescription: 'APIs to manage the user resource.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/logout
    metadata:
      groupName: 'User Management'
      groupDescription: 'APIs to manage the user resource.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Log Out'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user
    metadata:
      groupName: 'User Management'
      groupDescription: 'APIs to manage the user resource.'
      subgroup: ''
      subgroupDescription: ''
      title: 'Store User.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: deserunt
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: qmorar@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 'E7;VS[JT>4(lF$m'
        type: string
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: occaecati
        type: string
        custom: []
    cleanBodyParameters:
      name: deserunt
      email: qmorar@example.com
      password: 'E7;VS[JT>4(lF$m'
      role: occaecati
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
